{"ast":null,"code":"var _jsxFileName = \"/home/turgor/Pulpit/GetGood/src/components/NewQuiz.jsx\";\nimport React, { useState } from \"react\";\nimport \"../scss/_NewQuiz.scss\";\nimport NewQuizButtons from \"./NewQuizButtons\";\nimport NewQuizinput from \"./NewQuizInput\";\nimport NewQuizScrolbar from \"./NewQuizScrolbar\";\n\nfunction NewQuiz() {\n  const [elementData, setElementData] = useState({\n    title: \"\",\n    question: \"\",\n    correctAnswer: \"\",\n    answer1: \"\",\n    answer2: \"\",\n    answer3: \"\"\n  });\n  const [quizData, setQuizData] = useState([]);\n  const [questions, setQuestions] = useState([]); //   const API = \"http://localhost:3000\";\n  //   fetch(`${API}/db`)\n  //     .then((response) => response.json())\n  //     .then((data) => {\n  //       console.log(data);\n  //     })\n  //     .catch((error) => {\n  //       console.log(error);\n  //     });\n\n  let apiObject = {\n    name: \"lol\",\n    questions: quizData.map(e => [{\n      content: e.question,\n      answers: [{\n        content: e.correctAnswer,\n        correct: true\n      }, {\n        content: e.answer1,\n        correct: false\n      }, {\n        content: e.answer2,\n        correct: false\n      }, {\n        content: e.answer3,\n        correct: false\n      }]\n    }])\n  };\n\n  const quizSubmit = () => {\n    fetch(`http://localhost:4000/quizs`, {\n      method: \"POST\",\n      body: JSON.stringify(quizData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n  };\n\n  const changeHandler = ({\n    target: {\n      name,\n      value\n    }\n  }) => {\n    setElementData(prev => ({ ...prev,\n      [name]: value\n    }));\n    setQuestions(prev => [...prev, {\n      title: \"\",\n      question: \"\",\n      correctAnswer: \"\",\n      answer1: \"\",\n      answer2: \"\",\n      answer3: \"\"\n    }]);\n  };\n\n  const newQuestionHandler = () => {\n    setQuizData(prev => [...prev, elementData]);\n    setElementData({\n      title: \"\",\n      question: \"\",\n      correctAnswer: \"\",\n      answer1: \"\",\n      answer2: \"\",\n      answer3: \"\"\n    });\n    console.log(apiObject);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newQuizContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NewQuizButtons, {\n    quizSubmit: quizSubmit,\n    newQuestionHandler: newQuestionHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(NewQuizinput, {\n    elementData: elementData,\n    changeHandler: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(NewQuizScrolbar, {\n    quizData: quizData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default NewQuiz;","map":{"version":3,"sources":["/home/turgor/Pulpit/GetGood/src/components/NewQuiz.jsx"],"names":["React","useState","NewQuizButtons","NewQuizinput","NewQuizScrolbar","NewQuiz","elementData","setElementData","title","question","correctAnswer","answer1","answer2","answer3","quizData","setQuizData","questions","setQuestions","apiObject","name","map","e","content","answers","correct","quizSubmit","fetch","method","body","JSON","stringify","headers","changeHandler","target","value","prev","newQuestionHandler","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"../scss/_NewQuiz.scss\";\nimport NewQuizButtons from \"./NewQuizButtons\";\nimport NewQuizinput from \"./NewQuizInput\";\nimport NewQuizScrolbar from \"./NewQuizScrolbar\";\n\nfunction NewQuiz() {\n  const [elementData, setElementData] = useState({\n    title: \"\",\n    question: \"\",\n    correctAnswer: \"\",\n    answer1: \"\",\n    answer2: \"\",\n    answer3: \"\",\n  });\n\n  const [quizData, setQuizData] = useState([]);\n  const [questions, setQuestions] = useState([]);\n\n  //   const API = \"http://localhost:3000\";\n\n  //   fetch(`${API}/db`)\n  //     .then((response) => response.json())\n  //     .then((data) => {\n  //       console.log(data);\n  //     })\n  //     .catch((error) => {\n  //       console.log(error);\n  //     });\n\n  let apiObject = {\n    name: \"lol\",\n    questions: quizData.map((e) => [\n      {\n        content: e.question,\n        answers: [\n          {\n            content: e.correctAnswer,\n            correct: true,\n          },\n          {\n            content: e.answer1,\n            correct: false,\n          },\n          {\n            content: e.answer2,\n            correct: false,\n          },\n          {\n            content: e.answer3,\n            correct: false,\n          },\n        ],\n      },\n    ]),\n  };\n\n  const quizSubmit = () => {\n    fetch(`http://localhost:4000/quizs`, {\n      method: \"POST\",\n      body: JSON.stringify(quizData),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n  };\n\n  const changeHandler = ({ target: { name, value } }) => {\n    setElementData((prev) => ({ ...prev, [name]: value }));\n    setQuestions((prev) => [\n      ...prev,\n      {\n        title: \"\",\n        question: \"\",\n        correctAnswer: \"\",\n        answer1: \"\",\n        answer2: \"\",\n        answer3: \"\",\n      },\n    ]);\n  };\n\n  const newQuestionHandler = () => {\n    setQuizData((prev) => [...prev, elementData]);\n    setElementData({\n      title: \"\",\n      question: \"\",\n      correctAnswer: \"\",\n      answer1: \"\",\n      answer2: \"\",\n      answer3: \"\",\n    });\n    console.log(apiObject);\n  };\n  return (\n    <div className=\"newQuizContent\">\n      <NewQuizButtons\n        quizSubmit={quizSubmit}\n        newQuestionHandler={newQuestionHandler}\n      />\n      <NewQuizinput elementData={elementData} changeHandler={changeHandler} />\n      <NewQuizScrolbar quizData={quizData} />\n    </div>\n  );\n}\n\nexport default NewQuiz;\n"]},"metadata":{},"sourceType":"module"}