{"ast":null,"code":"var _jsxFileName = \"/home/turgor/Pulpit/GetGood/src/components/NewQuiz.jsx\";\nimport React, { useState } from \"react\";\nimport \"../scss/_Main.scss\";\nimport NewQuizButtons from \"./NewQuizButtons\";\nimport NewQuizinput from \"./NewQuizInput\";\nimport NewQuizScrolbar from \"./NewQuizScrolbar\";\n\nfunction NewQuiz() {\n  const [elementData, setElementData] = useState({\n    title: \"\",\n    question: \"\",\n    correctAnswer: \"\",\n    answer1: \"\",\n    answer2: \"\",\n    answer3: \"\"\n  });\n  const [quizData, setQuizData] = useState([]);\n  let apiObject;\n\n  if (quizData.length > 0) {\n    apiObject = {\n      name: quizData[0].title,\n      questions: quizData.map(e => [{\n        content: e.question,\n        answers: [{\n          content: e.correctAnswer,\n          correct: true\n        }, {\n          content: e.answer1,\n          correct: false\n        }, {\n          content: e.answer2,\n          correct: false\n        }, {\n          content: e.answer3,\n          correct: false\n        }]\n      }])\n    };\n  }\n\n  const quizSubmit = () => {\n    setQuizData(prev => [...prev, elementData]);\n    fetch(`http://localhost:4000/quizs`, {\n      method: \"POST\",\n      body: JSON.stringify(apiObject),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n  };\n\n  const changeHandler = ({\n    target: {\n      name,\n      value\n    }\n  }) => {\n    setElementData(prev => ({ ...prev,\n      [name]: value\n    }));\n  };\n\n  const newQuestionHandler = () => {\n    console.log();\n\n    if (elementData.title === \"\" && elementData.question === \"\" && elementData.correctAnswer === \"\" && elementData.answer1 === \"\" && elementData.answer2 === \"\" && elementData.answer3 === \"\") {\n      return alert(\"Wypełnij puste pola\");\n    }\n\n    setQuizData(prev => [...prev, elementData]);\n    setElementData({\n      title: \"lol\",\n      question: \"\",\n      correctAnswer: \"\",\n      answer1: \"\",\n      answer2: \"\",\n      answer3: \"\"\n    });\n    console.log(apiObject);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newQuizContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NewQuizButtons, {\n    quizSubmit: quizSubmit,\n    newQuestionHandler: newQuestionHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(NewQuizinput, {\n    quizData: quizData,\n    elementData: elementData,\n    changeHandler: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(NewQuizScrolbar, {\n    quizData: quizData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default NewQuiz;","map":{"version":3,"sources":["/home/turgor/Pulpit/GetGood/src/components/NewQuiz.jsx"],"names":["React","useState","NewQuizButtons","NewQuizinput","NewQuizScrolbar","NewQuiz","elementData","setElementData","title","question","correctAnswer","answer1","answer2","answer3","quizData","setQuizData","apiObject","length","name","questions","map","e","content","answers","correct","quizSubmit","prev","fetch","method","body","JSON","stringify","headers","changeHandler","target","value","newQuestionHandler","console","log","alert"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"../scss/_Main.scss\";\nimport NewQuizButtons from \"./NewQuizButtons\";\nimport NewQuizinput from \"./NewQuizInput\";\nimport NewQuizScrolbar from \"./NewQuizScrolbar\";\n\nfunction NewQuiz() {\n  const [elementData, setElementData] = useState({\n    title: \"\",\n    question: \"\",\n    correctAnswer: \"\",\n    answer1: \"\",\n    answer2: \"\",\n    answer3: \"\",\n  });\n\n  const [quizData, setQuizData] = useState([]);\n\n  let apiObject;\n\n  if (quizData.length > 0) {\n    apiObject = {\n      name: quizData[0].title,\n      questions: quizData.map((e) => [\n        {\n          content: e.question,\n          answers: [\n            {\n              content: e.correctAnswer,\n              correct: true,\n            },\n            {\n              content: e.answer1,\n              correct: false,\n            },\n            {\n              content: e.answer2,\n              correct: false,\n            },\n            {\n              content: e.answer3,\n              correct: false,\n            },\n          ],\n        },\n      ]),\n    };\n  }\n\n  const quizSubmit = () => {\n    setQuizData((prev) => [...prev, elementData]);\n    fetch(`http://localhost:4000/quizs`, {\n      method: \"POST\",\n      body: JSON.stringify(apiObject),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n  };\n\n  const changeHandler = ({ target: { name, value } }) => {\n    setElementData((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const newQuestionHandler = () => {\n    console.log()\n    if (\n      elementData.title === \"\" &&\n      elementData.question === \"\" &&\n      elementData.correctAnswer === \"\" &&\n      elementData.answer1 === \"\" &&\n      elementData.answer2 === \"\" &&\n      elementData.answer3 === \"\"\n    ) {\n      return alert(\"Wypełnij puste pola\");\n    }\n    setQuizData((prev) => [...prev, elementData]);\n    setElementData({\n      title: \"lol\",\n      question: \"\",\n      correctAnswer: \"\",\n      answer1: \"\",\n      answer2: \"\",\n      answer3: \"\",\n    });\n    console.log(apiObject);\n  };\n  return (\n    <div className=\"newQuizContent\">\n      <NewQuizButtons\n        quizSubmit={quizSubmit}\n        newQuestionHandler={newQuestionHandler}\n      />\n      <NewQuizinput\n        quizData={quizData}\n        elementData={elementData}\n        changeHandler={changeHandler}\n      />\n      <NewQuizScrolbar quizData={quizData} />\n    </div>\n  );\n}\n\nexport default NewQuiz;\n"]},"metadata":{},"sourceType":"module"}