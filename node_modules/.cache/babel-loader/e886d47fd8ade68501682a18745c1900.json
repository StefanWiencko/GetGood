{"ast":null,"code":"var _jsxFileName = \"/home/turgor/Pulpit/GetGood/src/components/NewQuiz.jsx\";\nimport React, { useState } from \"react\";\nimport \"../scss/_NewQuiz.scss\";\nimport NewQuizButtons from \"./NewQuizButtons\";\nimport NewQuizinput from \"./NewQuizInput\";\nimport NewQuizScrolbar from \"./NewQuizScrolbar\";\n\nfunction NewQuiz() {\n  const [elementData, setElementData] = useState({\n    title: \"\",\n    question: \"\",\n    correctAnswer: \"\",\n    answer1: \"\",\n    answer2: \"\",\n    answer3: \"\"\n  });\n  const [quizData, setQuizData] = useState();\n  const API = \"http://localhost:3000\";\n  fetch(`${API}/db`).then(response => response.json()).then(data => {\n    console.log(data);\n  }).catch(error => {\n    console.log(error);\n  });\n\n  const changeHandler = ({\n    target: {\n      name,\n      value\n    }\n  }) => {\n    setElementData(prev => ({ ...prev,\n      [name]: value\n    }));\n  };\n\n  const newQuestion = () => {\n    setQuizData(prev => ({ ...prev,\n      elementData\n    }));\n    setElementData({\n      title: \"\",\n      question: \"\",\n      correctAnswer: \"\",\n      answer1: \"\",\n      answer2: \"\",\n      answer3: \"\"\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newQuizContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NewQuizButtons, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(NewQuizinput, {\n    elementData: elementData,\n    changeHandler: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(NewQuizScrolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default NewQuiz;","map":{"version":3,"sources":["/home/turgor/Pulpit/GetGood/src/components/NewQuiz.jsx"],"names":["React","useState","NewQuizButtons","NewQuizinput","NewQuizScrolbar","NewQuiz","elementData","setElementData","title","question","correctAnswer","answer1","answer2","answer3","quizData","setQuizData","API","fetch","then","response","json","data","console","log","catch","error","changeHandler","target","name","value","prev","newQuestion"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,uBAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,SAASC,OAAT,GAAmB;AACjB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC;AAC7CO,IAAAA,KAAK,EAAE,EADsC;AAE7CC,IAAAA,QAAQ,EAAE,EAFmC;AAG7CC,IAAAA,aAAa,EAAE,EAH8B;AAI7CC,IAAAA,OAAO,EAAE,EAJoC;AAK7CC,IAAAA,OAAO,EAAE,EALoC;AAM7CC,IAAAA,OAAO,EAAE;AANoC,GAAD,CAA9C;AASA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,EAAxC;AAEA,QAAMe,GAAG,GAAG,uBAAZ;AAEAC,EAAAA,KAAK,CAAE,GAAED,GAAI,KAAR,CAAL,CACGE,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,GAJH,EAKGG,KALH,CAKUC,KAAD,IAAW;AAChBH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,GAPH;;AASA,QAAMC,aAAa,GAAG,CAAC;AAAEC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR;AAAV,GAAD,KAAiC;AACrDtB,IAAAA,cAAc,CAAEuB,IAAD,KAAW,EAAE,GAAGA,IAAL;AAAW,OAACF,IAAD,GAAQC;AAAnB,KAAX,CAAD,CAAd;AACD,GAFD;;AAIA,QAAME,WAAW,GAAG,MAAM;AACxBhB,IAAAA,WAAW,CAAEe,IAAD,KAAW,EAAC,GAAGA,IAAJ;AAAUxB,MAAAA;AAAV,KAAX,CAAD,CAAX;AACAC,IAAAA,cAAc,CAAC;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,aAAa,EAAE,EAHJ;AAIXC,MAAAA,OAAO,EAAE,EAJE;AAKXC,MAAAA,OAAO,EAAE,EALE;AAMXC,MAAAA,OAAO,EAAE;AANE,KAAD,CAAd;AAQD,GAVD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,YAAD;AAAc,IAAA,WAAW,EAAEP,WAA3B;AAAwC,IAAA,aAAa,EAAEoB,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD;;AAED,eAAerB,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"../scss/_NewQuiz.scss\";\nimport NewQuizButtons from \"./NewQuizButtons\";\nimport NewQuizinput from \"./NewQuizInput\";\nimport NewQuizScrolbar from \"./NewQuizScrolbar\";\n\nfunction NewQuiz() {\n  const [elementData, setElementData] = useState({\n    title: \"\",\n    question: \"\",\n    correctAnswer: \"\",\n    answer1: \"\",\n    answer2: \"\",\n    answer3: \"\",\n  });\n\n  const [quizData, setQuizData] = useState()\n\n  const API = \"http://localhost:3000\";\n\n  fetch(`${API}/db`)\n    .then((response) => response.json())\n    .then((data) => {\n      console.log(data);\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n\n  const changeHandler = ({ target: { name, value } }) => {\n    setElementData((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const newQuestion = () => {\n    setQuizData((prev) => ({...prev, elementData}))\n    setElementData({\n        title: \"\",\n        question: \"\",\n        correctAnswer: \"\",\n        answer1: \"\",\n        answer2: \"\",\n        answer3: \"\",\n      })\n  }\n  return (\n    <div className=\"newQuizContent\">\n      <NewQuizButtons />\n      <NewQuizinput elementData={elementData} changeHandler={changeHandler} />\n      <NewQuizScrolbar />\n    </div>\n  );\n}\n\nexport default NewQuiz;\n"]},"metadata":{},"sourceType":"module"}