{"ast":null,"code":"var _jsxFileName = \"/home/turgor/Pulpit/GetGood/src/components/TakeQuiz.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../scss/_TakeQuiz.scss\";\nimport TakeQuizQuestion from \"./TakeQuizQuestion\";\nimport TakeQuizButtons from \"./TakeQuizButtons\";\nimport TakeQuizCount from \"./TakeQuizCount\";\nimport TakeQuizSummary from \"./TakeQuizSummary\";\n\nfunction TakeQuiz({\n  quizID,\n  correctCounterHandler,\n  setCorrectCounter,\n  correctCounter\n}) {\n  const [quizQuestions, setQuizQuestions] = useState();\n  const [questionNumber, setQuestionNumber] = useState(0);\n  useEffect(() => {\n    fetchAllQuizes();\n    console.log(\"fetch\", quizQuestions);\n  }, []);\n\n  const clickHandler = e => {\n    correctCounterHandler(e);\n\n    if (quizQuestions.questions.length > questionNumber) {\n      setQuestionNumber(prev => prev + 1);\n    } else {\n      return;\n    }\n  };\n\n  const startOver = () => {\n    setQuestionNumber(0);\n    setCorrectCounter(0);\n    setQuizQuestions(prev => shuffle(prev));\n  };\n\n  function shuffle(array) {\n    var m = array.length,\n        t,\n        i; // While there remain elements to shuffle…\n\n    while (m) {\n      // Pick a remaining element…\n      i = Math.floor(Math.random() * m--); // And swap it with the current element.\n\n      t = array[m];\n      array[m] = array[i];\n      array[i] = t;\n    }\n\n    return array;\n  }\n\n  const shuffleQuestions = obj => {\n    obj.questions.forEach(arr => shuffle(arr[0].answers)); // console.log(arr[0].answers)\n  };\n\n  const fetchAllQuizes = () => {\n    fetch(\"http://localhost:4000/quizs\").then(resp => resp.json()).then(data => data.forEach(e => {\n      if (e.id === quizID) {\n        setQuizQuestions(e);\n      }\n    }));\n  };\n\n  if (quizQuestions) {\n    shuffleQuestions(quizQuestions);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"takeQuizContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, quizQuestions && questionNumber === quizQuestions.questions.length ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TakeQuizButtons, {\n    startOver: startOver,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TakeQuizSummary, {\n    correctCounter: correctCounter,\n    quizQuestions: quizQuestions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TakeQuizButtons, {\n    startOver: startOver,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TakeQuizQuestion, {\n    questionNumber: questionNumber,\n    clickHandler: clickHandler,\n    quizQuestions: quizQuestions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TakeQuizCount, {\n    questionNumber: questionNumber,\n    quizQuestions: quizQuestions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport default TakeQuiz;","map":{"version":3,"sources":["/home/turgor/Pulpit/GetGood/src/components/TakeQuiz.jsx"],"names":["React","useState","useEffect","TakeQuizQuestion","TakeQuizButtons","TakeQuizCount","TakeQuizSummary","TakeQuiz","quizID","correctCounterHandler","setCorrectCounter","correctCounter","quizQuestions","setQuizQuestions","questionNumber","setQuestionNumber","fetchAllQuizes","console","log","clickHandler","e","questions","length","prev","startOver","shuffle","array","m","t","i","Math","floor","random","shuffleQuestions","obj","forEach","arr","answers","fetch","then","resp","json","data","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../scss/_TakeQuiz.scss\";\nimport TakeQuizQuestion from \"./TakeQuizQuestion\";\nimport TakeQuizButtons from \"./TakeQuizButtons\";\nimport TakeQuizCount from \"./TakeQuizCount\";\nimport TakeQuizSummary from \"./TakeQuizSummary\";\n\nfunction TakeQuiz({ quizID, correctCounterHandler, setCorrectCounter, correctCounter }) {\n  const [quizQuestions, setQuizQuestions] = useState();\n  const [questionNumber, setQuestionNumber] = useState(0);\n\n  useEffect(() => {\n    fetchAllQuizes();\n    console.log(\"fetch\", quizQuestions);\n  }, []);\n\n  const clickHandler = (e) => {\n    correctCounterHandler(e);\n    if (quizQuestions.questions.length > questionNumber ) {\n      setQuestionNumber((prev) => prev + 1);\n    } else {\n      return;\n    }\n  };\n  const startOver = () => {\n    setQuestionNumber(0);\n    setCorrectCounter(0);\n    setQuizQuestions(prev => shuffle(prev))\n  };\n\n  function shuffle(array) {\n    var m = array.length, t, i;\n  \n    // While there remain elements to shuffle…\n    while (m) {\n  \n      // Pick a remaining element…\n      i = Math.floor(Math.random() * m--);\n  \n      // And swap it with the current element.\n      t = array[m];\n      array[m] = array[i];\n      array[i] = t;\n    }\n  \n    return array;\n  }\n\n  const shuffleQuestions = (obj) =>{\n    obj.questions.forEach(arr => shuffle(arr[0].answers))\n    // console.log(arr[0].answers)\n  }\n\n  const fetchAllQuizes = () => {\n    fetch(\"http://localhost:4000/quizs\")\n      .then((resp) => resp.json())\n      .then((data) =>\n        data.forEach((e) => {\n          if (e.id === quizID) {\n            setQuizQuestions(e);\n          }\n        })\n      );\n  };\n  if(quizQuestions){\n    shuffleQuestions(quizQuestions)\n  }\n  return (\n    <div className=\"takeQuizContent\">\n      {quizQuestions &&\n      questionNumber === quizQuestions.questions.length ? (\n        <>\n          <TakeQuizButtons startOver={startOver} />\n          <TakeQuizSummary\n            correctCounter={correctCounter}\n            quizQuestions={quizQuestions}\n          />\n        </>\n      ) : (\n        <>\n          <TakeQuizButtons startOver={startOver} />\n          <TakeQuizQuestion\n            questionNumber={questionNumber}\n            clickHandler={clickHandler}\n            quizQuestions={quizQuestions}\n          />\n          <TakeQuizCount\n            questionNumber={questionNumber}\n            quizQuestions={quizQuestions}\n          />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default TakeQuiz;\n"]},"metadata":{},"sourceType":"module"}