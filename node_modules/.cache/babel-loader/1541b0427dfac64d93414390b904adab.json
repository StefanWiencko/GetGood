{"ast":null,"code":"var _jsxFileName = \"/home/turgor/Pulpit/GetGood/src/components/NewQuiz.jsx\";\nimport React, { useState } from \"react\";\nimport \"../scss/_NewQuiz.scss\";\nimport NewQuizButtons from \"./NewQuizButtons\";\nimport NewQuizinput from \"./NewQuizInput\";\nimport NewQuizScrolbar from \"./NewQuizScrolbar\";\n\nfunction NewQuiz() {\n  const [elementData, setElementData] = useState({\n    title: \"\",\n    question: \"\",\n    correctAnswer: \"\",\n    answer1: \"\",\n    answer2: \"\",\n    answer3: \"\"\n  });\n  const [submit, setSubmit] = useState({\n    id: 1,\n    name: \"Biologia - Anatomia\",\n    questions: [{\n      content: \"Czy to jest głowa?\",\n      answers: [{\n        content: \"To jest głowa\",\n        correct: false\n      }, {\n        content: \"To jest chyba głowa\",\n        correct: false\n      }, {\n        content: \"To nie jest głowa\",\n        correct: true\n      }]\n    }]\n  });\n  const [quizData, setQuizData] = useState([]); //   const API = \"http://localhost:3000\";\n  //   fetch(`${API}/db`)\n  //     .then((response) => response.json())\n  //     .then((data) => {\n  //       console.log(data);\n  //     })\n  //     .catch((error) => {\n  //       console.log(error);\n  //     });\n\n  const quizSubmit = obj => {\n    fetch(`http://localhost:3000/db`, {\n      method: \"POST\",\n      body: JSON.stringify(obj),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n  };\n\n  const changeHandler = ({\n    target: {\n      name,\n      value\n    }\n  }) => {\n    setElementData(prev => ({ ...prev,\n      [name]: value\n    }));\n  };\n\n  const newQuestionHandler = () => {\n    setQuizData(prev => [...prev, elementData]);\n    setElementData({\n      title: \"\",\n      question: \"\",\n      correctAnswer: \"\",\n      answer1: \"\",\n      answer2: \"\",\n      answer3: \"\"\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newQuizContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NewQuizButtons, {\n    newQuestionHandler: newQuestionHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(NewQuizinput, {\n    elementData: elementData,\n    changeHandler: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(NewQuizScrolbar, {\n    quizSubmit: quizSubmit,\n    quizData: quizData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default NewQuiz;","map":{"version":3,"sources":["/home/turgor/Pulpit/GetGood/src/components/NewQuiz.jsx"],"names":["React","useState","NewQuizButtons","NewQuizinput","NewQuizScrolbar","NewQuiz","elementData","setElementData","title","question","correctAnswer","answer1","answer2","answer3","submit","setSubmit","id","name","questions","content","answers","correct","quizData","setQuizData","quizSubmit","obj","fetch","method","body","JSON","stringify","headers","changeHandler","target","value","prev","newQuestionHandler"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,uBAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,SAASC,OAAT,GAAmB;AACjB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC;AAC7CO,IAAAA,KAAK,EAAE,EADsC;AAE7CC,IAAAA,QAAQ,EAAE,EAFmC;AAG7CC,IAAAA,aAAa,EAAE,EAH8B;AAI7CC,IAAAA,OAAO,EAAE,EAJoC;AAK7CC,IAAAA,OAAO,EAAE,EALoC;AAM7CC,IAAAA,OAAO,EAAE;AANoC,GAAD,CAA9C;AASA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC;AACnCe,IAAAA,EAAE,EAAE,CAD+B;AAEnCC,IAAAA,IAAI,EAAE,qBAF6B;AAGnCC,IAAAA,SAAS,EAAE,CACT;AACEC,MAAAA,OAAO,EAAE,oBADX;AAEEC,MAAAA,OAAO,EAAE,CACP;AACED,QAAAA,OAAO,EAAE,eADX;AAEEE,QAAAA,OAAO,EAAE;AAFX,OADO,EAKP;AACEF,QAAAA,OAAO,EAAE,qBADX;AAEEE,QAAAA,OAAO,EAAE;AAFX,OALO,EASP;AACEF,QAAAA,OAAO,EAAE,mBADX;AAEEE,QAAAA,OAAO,EAAE;AAFX,OATO;AAFX,KADS;AAHwB,GAAD,CAApC;AAwBA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BtB,QAAQ,CAAC,EAAD,CAAxC,CAlCiB,CAoCjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMuB,UAAU,GAAIC,GAAD,IAAS;AAC1BC,IAAAA,KAAK,CAAE,0BAAF,EAA6B;AAChCC,MAAAA,MAAM,EAAE,MADwB;AAEhCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,GAAf,CAF0B;AAGhCM,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAHuB,KAA7B,CAAL;AAOD,GARD;;AAUA,QAAMC,aAAa,GAAG,CAAC;AAAEC,IAAAA,MAAM,EAAE;AAAEhB,MAAAA,IAAF;AAAQiB,MAAAA;AAAR;AAAV,GAAD,KAAiC;AACrD3B,IAAAA,cAAc,CAAE4B,IAAD,KAAW,EAAE,GAAGA,IAAL;AAAW,OAAClB,IAAD,GAAQiB;AAAnB,KAAX,CAAD,CAAd;AACD,GAFD;;AAIA,QAAME,kBAAkB,GAAG,MAAM;AAC/Bb,IAAAA,WAAW,CAAEY,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAU7B,WAAV,CAAX,CAAX;AACAC,IAAAA,cAAc,CAAC;AACbC,MAAAA,KAAK,EAAE,EADM;AAEbC,MAAAA,QAAQ,EAAE,EAFG;AAGbC,MAAAA,aAAa,EAAE,EAHF;AAIbC,MAAAA,OAAO,EAAE,EAJI;AAKbC,MAAAA,OAAO,EAAE,EALI;AAMbC,MAAAA,OAAO,EAAE;AANI,KAAD,CAAd;AAQD,GAVD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAgB,IAAA,kBAAkB,EAAEuB,kBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,YAAD;AAAc,IAAA,WAAW,EAAE9B,WAA3B;AAAwC,IAAA,aAAa,EAAE0B,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,eAAD;AAAiB,IAAA,UAAU,EAAER,UAA7B;AAAyC,IAAA,QAAQ,EAAEF,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD;;AAED,eAAejB,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"../scss/_NewQuiz.scss\";\nimport NewQuizButtons from \"./NewQuizButtons\";\nimport NewQuizinput from \"./NewQuizInput\";\nimport NewQuizScrolbar from \"./NewQuizScrolbar\";\n\nfunction NewQuiz() {\n  const [elementData, setElementData] = useState({\n    title: \"\",\n    question: \"\",\n    correctAnswer: \"\",\n    answer1: \"\",\n    answer2: \"\",\n    answer3: \"\",\n  });\n\n  const [submit, setSubmit] = useState({\n    id: 1,\n    name: \"Biologia - Anatomia\",\n    questions: [\n      {\n        content: \"Czy to jest głowa?\",\n        answers: [\n          {\n            content: \"To jest głowa\",\n            correct: false,\n          },\n          {\n            content: \"To jest chyba głowa\",\n            correct: false,\n          },\n          {\n            content: \"To nie jest głowa\",\n            correct: true,\n          },\n        ],\n      },\n    ],\n  });\n\n  const [quizData, setQuizData] = useState([]);\n\n  //   const API = \"http://localhost:3000\";\n\n  //   fetch(`${API}/db`)\n  //     .then((response) => response.json())\n  //     .then((data) => {\n  //       console.log(data);\n  //     })\n  //     .catch((error) => {\n  //       console.log(error);\n  //     });\n\n  const quizSubmit = (obj) => {\n    fetch(`http://localhost:3000/db`, {\n      method: \"POST\",\n      body: JSON.stringify(obj),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n  };\n\n  const changeHandler = ({ target: { name, value } }) => {\n    setElementData((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const newQuestionHandler = () => {\n    setQuizData((prev) => [...prev, elementData]);\n    setElementData({\n      title: \"\",\n      question: \"\",\n      correctAnswer: \"\",\n      answer1: \"\",\n      answer2: \"\",\n      answer3: \"\",\n    });\n  };\n  return (\n    <div className=\"newQuizContent\">\n      <NewQuizButtons newQuestionHandler={newQuestionHandler} />\n      <NewQuizinput elementData={elementData} changeHandler={changeHandler} />\n      <NewQuizScrolbar quizSubmit={quizSubmit} quizData={quizData} />\n    </div>\n  );\n}\n\nexport default NewQuiz;\n"]},"metadata":{},"sourceType":"module"}