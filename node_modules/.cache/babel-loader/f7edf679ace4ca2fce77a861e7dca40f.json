{"ast":null,"code":"var _jsxFileName = \"/home/turgor/Pulpit/GetGood/src/components/NewQuiz.jsx\";\nimport React, { useState } from \"react\";\nimport \"../scss/_NewQuiz.scss\";\nimport NewQuizButtons from \"./NewQuizButtons\";\nimport NewQuizinput from \"./NewQuizInput\";\nimport NewQuizScrolbar from \"./NewQuizScrolbar\";\n\nfunction NewQuiz() {\n  const [elementData, setElementData] = useState({\n    title: \"\",\n    question: \"\",\n    correctAnswer: \"\",\n    answer1: \"\",\n    answer2: \"\",\n    answer3: \"\"\n  });\n  const [submit, setSubmit] = useState();\n  const [quizData, setQuizData] = useState([]); //   const API = \"http://localhost:3000\";\n  //   fetch(`${API}/db`)\n  //     .then((response) => response.json())\n  //     .then((data) => {\n  //       console.log(data);\n  //     })\n  //     .catch((error) => {\n  //       console.log(error);\n  //     });\n\n  const quizSubmit = obj => console.log(obj) // obj.map(e => ({\n  //   name: \"Biologia - Anatomia\",\n  //   questions: [\n  //     {\n  //       content: e.question,\n  //       answers: [\n  //         {\n  //           content: e.correctAnswer,\n  //           correct: true,\n  //         },\n  //         {\n  //           content: e.answer1,\n  //           correct: false,\n  //         },\n  //         {\n  //           content: e.answer2,\n  //           correct: false,\n  //         },\n  //         {\n  //           content: e.answer3,\n  //           correct: false,\n  //         }\n  //       ],\n  //     },\n  //   ],\n  // }))\n  ;\n\n  console.log(quizData);\n\n  const apiSubmit = () => {\n    quizSubmit(quizData);\n    fetch(`http://localhost:4000/quizs`, {\n      method: \"POST\",\n      body: JSON.stringify(submit),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n  };\n\n  const changeHandler = ({\n    target: {\n      name,\n      value\n    }\n  }) => {\n    setElementData(prev => ({ ...prev,\n      [name]: value\n    }));\n  };\n\n  const newQuestionHandler = () => {\n    setQuizData(prev => [...prev, elementData]);\n    setElementData({\n      title: \"\",\n      question: \"\",\n      correctAnswer: \"\",\n      answer1: \"\",\n      answer2: \"\",\n      answer3: \"\"\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newQuizContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NewQuizButtons, {\n    quizSubmit: quizSubmit,\n    newQuestionHandler: newQuestionHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(NewQuizinput, {\n    elementData: elementData,\n    changeHandler: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(NewQuizScrolbar, {\n    quizData: quizData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default NewQuiz;","map":{"version":3,"sources":["/home/turgor/Pulpit/GetGood/src/components/NewQuiz.jsx"],"names":["React","useState","NewQuizButtons","NewQuizinput","NewQuizScrolbar","NewQuiz","elementData","setElementData","title","question","correctAnswer","answer1","answer2","answer3","submit","setSubmit","quizData","setQuizData","quizSubmit","obj","console","log","apiSubmit","fetch","method","body","JSON","stringify","headers","changeHandler","target","name","value","prev","newQuestionHandler"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,uBAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,SAASC,OAAT,GAAmB;AACjB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC;AAC7CO,IAAAA,KAAK,EAAE,EADsC;AAE7CC,IAAAA,QAAQ,EAAE,EAFmC;AAG7CC,IAAAA,aAAa,EAAE,EAH8B;AAI7CC,IAAAA,OAAO,EAAE,EAJoC;AAK7CC,IAAAA,OAAO,EAAE,EALoC;AAM7CC,IAAAA,OAAO,EAAE;AANoC,GAAD,CAA9C;AASA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,EAApC;AAEA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC,CAZiB,CAcjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMiB,UAAU,GAAIC,GAAD,IACjBC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CADiB,CAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BF;;AA8BAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;;AAEA,QAAMM,SAAS,GAAG,MAAM;AACtBJ,IAAAA,UAAU,CAACF,QAAD,CAAV;AACAO,IAAAA,KAAK,CAAE,6BAAF,EAAgC;AACnCC,MAAAA,MAAM,EAAE,MAD2B;AAEnCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeb,MAAf,CAF6B;AAGnCc,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAH0B,KAAhC,CAAL;AAOD,GATD;;AAWA,QAAMC,aAAa,GAAG,CAAC;AAAEC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR;AAAV,GAAD,KAAiC;AACrDzB,IAAAA,cAAc,CAAE0B,IAAD,KAAW,EAAE,GAAGA,IAAL;AAAW,OAACF,IAAD,GAAQC;AAAnB,KAAX,CAAD,CAAd;AACD,GAFD;;AAIA,QAAME,kBAAkB,GAAG,MAAM;AAC/BjB,IAAAA,WAAW,CAAEgB,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAU3B,WAAV,CAAX,CAAX;AACAC,IAAAA,cAAc,CAAC;AACbC,MAAAA,KAAK,EAAE,EADM;AAEbC,MAAAA,QAAQ,EAAE,EAFG;AAGbC,MAAAA,aAAa,EAAE,EAHF;AAIbC,MAAAA,OAAO,EAAE,EAJI;AAKbC,MAAAA,OAAO,EAAE,EALI;AAMbC,MAAAA,OAAO,EAAE;AANI,KAAD,CAAd;AAQD,GAVD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAiB,IAAA,UAAU,EAAEK,UAA7B;AAAyC,IAAA,kBAAkB,EAAEgB,kBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,YAAD;AAAc,IAAA,WAAW,EAAE5B,WAA3B;AAAwC,IAAA,aAAa,EAAEuB,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,eAAD;AAAkB,IAAA,QAAQ,EAAEb,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD;;AAED,eAAeX,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"../scss/_NewQuiz.scss\";\nimport NewQuizButtons from \"./NewQuizButtons\";\nimport NewQuizinput from \"./NewQuizInput\";\nimport NewQuizScrolbar from \"./NewQuizScrolbar\";\n\nfunction NewQuiz() {\n  const [elementData, setElementData] = useState({\n    title: \"\",\n    question: \"\",\n    correctAnswer: \"\",\n    answer1: \"\",\n    answer2: \"\",\n    answer3: \"\",\n  });\n\n  const [submit, setSubmit] = useState();\n\n  const [quizData, setQuizData] = useState([]);\n\n  //   const API = \"http://localhost:3000\";\n\n  //   fetch(`${API}/db`)\n  //     .then((response) => response.json())\n  //     .then((data) => {\n  //       console.log(data);\n  //     })\n  //     .catch((error) => {\n  //       console.log(error);\n  //     });\n\n  const quizSubmit = (obj) => (\n    console.log(obj)\n    // obj.map(e => ({\n    //   name: \"Biologia - Anatomia\",\n    //   questions: [\n    //     {\n    //       content: e.question,\n    //       answers: [\n    //         {\n    //           content: e.correctAnswer,\n    //           correct: true,\n    //         },\n    //         {\n    //           content: e.answer1,\n    //           correct: false,\n    //         },\n    //         {\n    //           content: e.answer2,\n    //           correct: false,\n    //         },\n    //         {\n    //           content: e.answer3,\n    //           correct: false,\n    //         }\n    //       ],\n    //     },\n    //   ],\n    // }))\n  )\n\n  console.log(quizData)\n\n  const apiSubmit = () => { \n    quizSubmit(quizData)\n    fetch(`http://localhost:4000/quizs`, {\n      method: \"POST\",\n      body: JSON.stringify(submit),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      }\n    });\n  };\n\n  const changeHandler = ({ target: { name, value } }) => {\n    setElementData((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const newQuestionHandler = () => {\n    setQuizData((prev) => [...prev, elementData]);\n    setElementData({\n      title: \"\",\n      question: \"\",\n      correctAnswer: \"\",\n      answer1: \"\",\n      answer2: \"\",\n      answer3: \"\",\n    });\n  };\n  return (\n    <div className=\"newQuizContent\">\n      <NewQuizButtons  quizSubmit={quizSubmit} newQuestionHandler={newQuestionHandler} />\n      <NewQuizinput elementData={elementData} changeHandler={changeHandler} />\n      <NewQuizScrolbar  quizData={quizData} />\n    </div>\n  );\n}\n\nexport default NewQuiz;\n"]},"metadata":{},"sourceType":"module"}