{"ast":null,"code":"var _jsxFileName = \"/home/turgor/Pulpit/GetGood/src/components/MainView.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../scss/_Main.scss\";\nimport FirstPage from \"./FirstPage\";\nimport NewQuiz from \"./NewQuiz\";\nimport TakeQuiz from \"./TakeQuiz\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction MainView() {\n  const [quizQuestions, setQuizQuestions] = useState();\n  const [quizID, setQuizID] = useState(1);\n  const [correctCounter, setCorrectCounter] = useState(0); // let fetchAllQuizes = (id) => {\n  //   fetch(\"http://localhost:4000/quizs\")\n  //     .then((resp) => resp.json())\n  //     // .then(id => setQuizID(id))\n  //     .then((data) =>\n  //       data.forEach((e) => {\n  //         if (e.id == quizID) {\n  //           setQuizQuestions(e);\n  //         }\n  //       })\n  //     );\n  // };\n\n  const fetchAllQuizes = () => {\n    fetch(\"http://localhost:4000/quizs\").then(resp => resp.json()).then(data => setQuizQuestions(data)); // .then((id) => {\n    //   setQuizID(id);\n    //   console.log(quizID, \"id\");\n    // })\n    // .then()\n  };\n\n  const correctCounterHandler = e => {\n    if (e.target.dataset.correct === \"true\") {\n      setCorrectCounter(prev => prev + 1);\n    }\n  };\n\n  const chooseQuizHandler = e => {\n    setQuizID(e.target.id);\n  };\n\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, console.log(quizQuestions), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"appBody\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"GetGood\")), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    render: () => /*#__PURE__*/React.createElement(FirstPage, {\n      chooseQuizHandler: chooseQuizHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 27\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/newquiz\",\n    component: NewQuiz,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/takequiz\",\n    render: () => /*#__PURE__*/React.createElement(TakeQuiz, {\n      setCorrectCounter: setCorrectCounter,\n      correctCounterHandler: correctCounterHandler,\n      correctCounter: correctCounter,\n      quizQuestions: quizQuestions,\n      quizID: quizID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default MainView;","map":{"version":3,"sources":["/home/turgor/Pulpit/GetGood/src/components/MainView.jsx"],"names":["React","useState","useEffect","FirstPage","NewQuiz","TakeQuiz","BrowserRouter","Router","Switch","Route","MainView","quizQuestions","setQuizQuestions","quizID","setQuizID","correctCounter","setCorrectCounter","fetchAllQuizes","fetch","then","resp","json","data","correctCounterHandler","e","target","dataset","correct","prev","chooseQuizHandler","id","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAO,oBAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;;AACA,SAASC,QAAT,GAAoB;AAClB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,EAAlD;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACc,cAAD,EAAiBC,iBAAjB,IAAsCf,QAAQ,CAAC,CAAD,CAApD,CAHkB,CAKlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMgB,cAAc,GAAG,MAAM;AAC3BC,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACGC,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESG,IAAD,IAAUV,gBAAgB,CAACU,IAAD,CAFlC,EAD2B,CAIzB;AACA;AACA;AACA;AACA;AACH,GATD;;AAWA,QAAMC,qBAAqB,GAAIC,CAAD,IAAO;AACnC,QAAIA,CAAC,CAACC,MAAF,CAASC,OAAT,CAAiBC,OAAjB,KAA6B,MAAjC,EAAyC;AACvCX,MAAAA,iBAAiB,CAAEY,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAjB;AACD;AACF,GAJD;;AAKA,QAAMC,iBAAiB,GAAIL,CAAD,IAAO;AAC/BV,IAAAA,SAAS,CAACU,CAAC,CAACC,MAAF,CAASK,EAAV,CAAT;AACD,GAFD;;AAGA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,OAAO,CAACC,GAAR,CAAYrB,aAAZ,CADH,eAEE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,eAIE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,GADP;AAEE,IAAA,KAAK,MAFP;AAGE,IAAA,MAAM,EAAE,mBAAM,oBAAC,SAAD;AAAW,MAAA,iBAAiB,EAAEkB,iBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,SAAS,EAAEzB,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAOE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,MAAM,EAAE,mBACN,oBAAC,QAAD;AACE,MAAA,iBAAiB,EAAEY,iBADrB;AAEE,MAAA,qBAAqB,EAAEO,qBAFzB;AAGE,MAAA,cAAc,EAAER,cAHlB;AAIE,MAAA,aAAa,EAAEJ,aAJjB;AAKE,MAAA,MAAM,EAAEE,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAJF,CAFF,CADF;AA8BD;;AAED,eAAeH,QAAf","sourcesContent":["import React, { useState,useEffect } from \"react\";\nimport \"../scss/_Main.scss\";\nimport FirstPage from \"./FirstPage\";\nimport NewQuiz from \"./NewQuiz\";\nimport TakeQuiz from \"./TakeQuiz\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nfunction MainView() {\n  const [quizQuestions, setQuizQuestions] = useState();\n  const [quizID, setQuizID] = useState(1);\n  const [correctCounter, setCorrectCounter] = useState(0);\n\n  // let fetchAllQuizes = (id) => {\n  //   fetch(\"http://localhost:4000/quizs\")\n  //     .then((resp) => resp.json())\n  //     // .then(id => setQuizID(id))\n  //     .then((data) =>\n  //       data.forEach((e) => {\n  //         if (e.id == quizID) {\n  //           setQuizQuestions(e);\n  //         }\n  //       })\n  //     );\n  // };\n\n  const fetchAllQuizes = () => {\n    fetch(\"http://localhost:4000/quizs\")\n      .then((resp) => resp.json())\n      .then((data) => setQuizQuestions(data))\n      // .then((id) => {\n      //   setQuizID(id);\n      //   console.log(quizID, \"id\");\n      // })\n      // .then()\n  };\n\n  const correctCounterHandler = (e) => {\n    if (e.target.dataset.correct === \"true\") {\n      setCorrectCounter((prev) => prev + 1);\n    }\n  };\n  const chooseQuizHandler = (e) => {\n    setQuizID(e.target.id);\n  };\n  return (\n    <Router>\n      {console.log(quizQuestions)}\n      <div className=\"appBody\">\n        <header className=\"header\">\n          <div className=\"logo\">GetGood</div>\n        </header>\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={() => <FirstPage chooseQuizHandler={chooseQuizHandler} />}\n          />\n          <Route path=\"/newquiz\" component={NewQuiz} />\n          <Route\n            path=\"/takequiz\"\n            render={() => (\n              <TakeQuiz\n                setCorrectCounter={setCorrectCounter}\n                correctCounterHandler={correctCounterHandler}\n                correctCounter={correctCounter}\n                quizQuestions={quizQuestions}\n                quizID={quizID}\n              />\n            )}\n          />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default MainView;\n"]},"metadata":{},"sourceType":"module"}